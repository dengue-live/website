
@{
    ViewData["Title"] = "Home";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    body {
        font-family: sans-serif;
    }

    canvas {
        background-color: #85CEBB;
    }

    #header-img {
        position: relative;
        text-align: center;
        color: white;
    }

    #title {
        position: absolute;
        bottom: 300px;
        left: 80px;
        width: 900px;
        text-align: left;
        font-family: 'Montserrat';
        font-size: 4em;
        font-weight: 700;
    }

    #map {
        width: 100%;
        height: 600px;
        margin-bottom: 100px;
        border-radius: 20px;
        background-color: #eeeeee;
    }

    h1 {
        font-family: 'Montserrat';
        font-weight: 700;
        font-size: 3em;
        color: #666666;
        margin-left: -10px;
    }

    #main {
        margin: 50px 10%;
    }

    a {
    color: grey;
    text-decoration: none;
}

    a:hover {
    color: #222;
    text-decoration: none;
    }

    p {
        width: 50%;
    }

    .card {
        border-radius: 10px;
    }

    #predictionContainer{
        display: flex;
        flex-flow: row wrap;
        margin-bottom: 100px;
    }

    #currentLocationCard{
        width: 400px;
        padding: 50px;
        height: 500px;
        margin-right: 20px;
    }

    #predictionsList {
        width: 60%;
    }

    #predictionsList div {
        width: 100%;
        height: 100px;
    }

    #preventionCard{
        height: 350px;
        width: 100%;
        padding: 80px;
        border-radius: 20px;
        background-color: darkslategrey;
    }

    .list-group li {
        font-size: 2em;
    }
    /*MOBILE*/
    @@media screen and (max-width: 640px) {

        #main {
            margin: 50px 5%;
        }

        #title {
        position: absolute;
        bottom: 200px;
        left: 5%;
        width: 90%;
        text-align: center;
        font-size: 2.5em;
        }

        h1 {
            width: 100%;
            font-size: 2.5em;
        }

        h4 {
            font-size: 1em;
        }

        p {
            width: 100%;
        }

        #currentLocationCard {
            width:100%;
            margin: 0 0 50px 0;
        }

        #predictionsList {
            width: 100%;
        }

        #preventionCard {
            padding: 50px;
        }
    }
</style>

<div id="header-img">
    <canvas id="canvas"></canvas>
    <div id="title">Under Construction</div>
</div>
<div id="main">
    <h1>What is dengue.live?</h1>
    <p>
        Lorem ipsum dolor sit amet, consectetur adipiscing elit,
        sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
        Ut enim ad minim veniam, quis nostrud exercitation ullamco
        laboris nisi ut aliquip ex ea commodo consequat.
    </p>
    <a href="@Url.Action("About", "Home")">Learn more</a>

    <br />
    <br />
    <br />

    <h1>Predictions</h1>
    <div id="map">

    </div>
    <div id="predictionContainer">
        <div id="currentLocationCard" class="card">
            <h1>Current Location</h1>
            <div id="tempGetCurrentLocation">
                <center>
                    <br />
                    <p>To view predictions for your area, please enable location services</p>
                    <button class="btn btn-info" type="button" onclick="getLocation()">
                        <span class="spinner-grow spinner-grow-sm" role="status" aria-hidden="true"></span>
                        Get Location
                    </button>
                </center>
            </div>
            <div>
                <p id="currentLocation"></p>
            </div>
        </div>
        <div id="predictionsList">
            <ul class="list-group">
                <li class="list-group-item">A simple list group item</li>
                <li class="list-group-item">A simple list group item</li>
                <li class="list-group-item">A simple list group item</li>
                <li class="list-group-item">A simple list group item</li>
                <li class="list-group-item">A simple list group item</li>
            </ul>
        </div>
    </div>
    <div id="preventionCard">
        <h1 style="color: #85CEBB; margin:0;">Play your part</h1>
        <h4 style="color:lightgrey; max-width: 600px">Take preventive measures to protect yourself and others from dengue</h4>
        <br />
        <a href="@Url.Action("Prevention", "Home")" style="font-weight:600;" class="btn btn-outline-info">Learn More</a>
    </div>

</div>




<script>
    // SCROLLREVEAL ///////////////////////////////////////
    ScrollReveal().reveal('#title', { distance: '20px', origin: 'top', delay: 200, duration: 1500 });


    // GEOLOCATION ////////////////////////////////////////
    function getLocation() {
      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(showPosition);
      } else { 
        x.innerHTML = "Geolocation is not supported by this browser.";
      }
    }

    function showPosition(position) {
        document.getElementById("currentLocation").innerHTML = "Your location" + position.coords.latitude + 
            ", " + position.coords.longitude;
        document.getElementById("tempGetCurrentLocation").style.display = "none";
    }


    // BACKGROUND ANIMATION ///////////////////////////////
    var canvas = document.getElementById("canvas"),
        ctx = canvas.getContext('2d');

    var stars = [], // Array that contains the stars
        FPS = 60, // Frames per second
        x = 100, // Number of stars
        mouse = {
            x: 0,
            y: 0
        };  // mouse location

    canvas.width = $("body").prop("clientWidth");
    canvas.height = 800;

    // Mobile view
    if (canvas.width < 640) {
        canvas.height = 500;
        x = 20;
    }

    // Push stars to array

    for (var i = 0; i < x; i++) {
        stars.push({
            x: Math.random() * canvas.width,
            y: Math.random() * canvas.height,
            radius: Math.random() * 1 + 1,
            vx: Math.floor(Math.random() * 50) - 25,
            vy: Math.floor(Math.random() * 50) - 25
        });
    }

    // Draw the scene

    function draw() {
        ctx.clearRect(0, 0, canvas.width, canvas.height);

        ctx.globalCompositeOperation = "lighter";

        for (var i = 0, x = stars.length; i < x; i++) {
            var s = stars[i];

            ctx.fillStyle = "#ddd";
            ctx.beginPath();
            ctx.arc(s.x, s.y, s.radius, 0, 2 * Math.PI);
            ctx.fill();
            ctx.fillStyle = 'black';
            ctx.stroke();
        }

        ctx.beginPath();
        for (var i = 0, x = stars.length; i < x; i++) {
            var starI = stars[i];
            ctx.moveTo(starI.x, starI.y);
            if (distance(mouse, starI) < 200) ctx.lineTo(mouse.x, mouse.y);
            for (var j = 0, x = stars.length; j < x; j++) {
                var starII = stars[j];
                if (distance(starI, starII) < 175) {
                    //ctx.globalAlpha = (1 / 150 * distance(starI, starII).toFixed(1));
                    ctx.lineTo(starII.x, starII.y);
                }
            }
        }
        ctx.lineWidth = 0.15;
        ctx.strokeStyle = 'white';
        ctx.stroke();
    }

    function distance(point1, point2) {
        var xs = 0;
        var ys = 0;

        xs = point2.x - point1.x;
        xs = xs * xs;

        ys = point2.y - point1.y;
        ys = ys * ys;

        return Math.sqrt(xs + ys);
    }

    // Update star locations

    function update() {
        for (var i = 0, x = stars.length; i < x; i++) {
            var s = stars[i];

            s.x += s.vx / FPS;
            s.y += s.vy / FPS;

            if (s.x < 0 || s.x > canvas.width) s.vx = -s.vx;
            if (s.y < 0 || s.y > canvas.height) s.vy = -s.vy;
        }
    }

    canvas.addEventListener('mousemove', function (e) {
        mouse.x = e.clientX;
        mouse.y = e.clientY;
    });

    // Update and draw

    function tick() {
        draw();
        update();
        requestAnimationFrame(tick);
    }

    tick();
</script>